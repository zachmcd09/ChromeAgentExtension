{"version":3,"file":"speechHandler.bundle.js","mappings":"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","sources":["webpack://chrome-extensions-gbt/webpack/bootstrap","webpack://chrome-extensions-gbt/webpack/runtime/define property getters","webpack://chrome-extensions-gbt/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extensions-gbt/webpack/runtime/make namespace object","webpack://chrome-extensions-gbt/./scripts/speechHandler.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * ./scripts/speechHandler.js\n * \n * This module manages speech recognition and text-to-speech functionality for the extension,\n * enabling voice interaction with the AI assistant.\n * \n * Key Features:\n * - Speech recognition initialization and management\n * - Microphone permission handling\n * - Text-to-speech conversion\n * - Conversation mode support\n * \n * Core Components:\n * 1. Permission Management\n *    - Handles microphone access requests\n *    - Manages permission state\n *    - Coordinates with permission iframe\n * \n * 2. Speech Recognition\n *    - Initializes recognition engine\n *    - Manages recognition states\n *    - Handles continuous listening\n *    - Processes recognition results\n * \n * 3. Text-to-Speech\n *    - Manages speech synthesis\n *    - Handles voice selection\n *    - Controls speaking states\n * \n * 4. Conversation Mode\n *    - Toggles between single and continuous recognition\n *    - Manages conversation state\n *    - Handles silence detection\n */\n\n// Speech recognition setup\nlet recognition = null;\nlet isListening = false;\nlet permissionGranted = false;\nlet silenceTimer = null;\nlet isSpeaking = false;\nlet conversationMode = false;\n\n// Function to find the permissions iframe\nfunction getPermissionsIframe() {\n    return document.querySelector('#permissionsIFrame') || \n           window.parent.document.querySelector('#permissionsIFrame');\n}\n\n// Function to request permission through the iframe\nfunction requestPermissionThroughIframe() {\n    const iframe = getPermissionsIframe();\n    if (iframe) {\n        iframe.contentWindow.postMessage({ type: 'REQUEST_PERMISSION' }, '*');\n    } else {\n        console.error('Permissions iframe not found');\n        document.getElementById('textInput').value = 'Error: Could not request microphone permission';\n    }\n}\n\n// Listen for permission messages from the iframe\nwindow.addEventListener('message', (event) => {\n    console.log('Received message:', event.data);\n    if (event.data.type === 'PERMISSION_GRANTED') {\n        permissionGranted = true;\n        console.log('Microphone permission granted');\n        const micButton = document.getElementById('micButton');\n        if (micButton && micButton.classList.contains('listening')) {\n            initializeSpeechRecognition(); // Initialize before starting\n            startListening();\n        }\n    } else if (event.data.type === 'PERMISSION_DENIED') {\n        permissionGranted = false;\n        console.error('Microphone permission denied:', event.data.error);\n        document.getElementById('textInput').value = 'Microphone access denied. Please check your browser settings.';\n        stopListening();\n    }\n});\n\n// Initialize speech recognition based on browser support\nfunction initializeSpeechRecognition() {\n    if (recognition) return true; // Already initialized\n\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n        recognition = new SpeechRecognition();\n        recognition.continuous = true;\n        recognition.interimResults = true;\n        \n        recognition.onresult = (event) => {\n            const transcript = Array.from(event.results)\n                .map(result => result[0].transcript)\n                .join('');\n            \n            document.getElementById('textInput').value = transcript;\n            \n            // Reset silence timer\n            if (silenceTimer) clearTimeout(silenceTimer);\n            silenceTimer = setTimeout(() => {\n                if (isListening) {\n                    const inputText = document.getElementById('textInput').value.trim();\n                    if (inputText) {\n                        document.getElementById('sendDataButton').click();\n                    }\n                    if (!conversationMode) {\n                        stopListening();\n                    }\n                }\n            }, 1500); // 1.5 seconds of silence triggers send\n        };\n\n        recognition.onerror = (event) => {\n            console.error('Speech recognition error:', event.error);\n            if (event.error === 'not-allowed') {\n                document.getElementById('textInput').value = 'Please allow microphone access and try again';\n                document.getElementById('textInput').select();\n                permissionGranted = false;\n            }\n            stopListening();\n        };\n\n        recognition.onend = () => {\n            if (isListening && !isSpeaking && conversationMode) {\n                // Restart recognition if we're in conversation mode\n                try {\n                    recognition.start();\n                } catch (error) {\n                    console.error('Error restarting recognition:', error);\n                    stopListening();\n                }\n            }\n        };\n        return true;\n    }\n    return false;\n}\n\n// Toggle speech recognition\nasync function toggleSpeechRecognition() {\n    const micButton = document.getElementById('micButton');\n    \n    if (isListening) {\n        stopListening();\n        return;\n    }\n\n    if (!recognition && !initializeSpeechRecognition()) {\n        document.getElementById('textInput').value = 'Speech recognition is not supported in your browser';\n        return;\n    }\n\n    micButton.classList.add('listening');\n    \n    if (!permissionGranted) {\n        document.getElementById('textInput').value = 'Requesting microphone permission...';\n        requestPermissionThroughIframe();\n        return;\n    }\n    \n    startListening();\n}\n\nfunction startListening() {\n    if (!permissionGranted) {\n        console.log('Cannot start listening without permission');\n        return;\n    }\n\n    if (!recognition) {\n        if (!initializeSpeechRecognition()) {\n            console.error('Failed to initialize speech recognition');\n            return;\n        }\n    }\n\n    const micButton = document.getElementById('micButton');\n    micButton.classList.add('listening');\n    isListening = true;\n    \n    try {\n        recognition.start();\n        document.getElementById('textInput').value = 'Listening...';\n    } catch (error) {\n        console.error('Speech recognition start error:', error);\n        stopListening();\n        document.getElementById('textInput').value = 'Error starting speech recognition. Please try again.';\n    }\n}\n\nfunction stopListening() {\n    const micButton = document.getElementById('micButton');\n    micButton.classList.remove('listening');\n    isListening = false;\n    if (recognition) {\n        try {\n            recognition.stop();\n        } catch (error) {\n            console.error('Speech recognition stop error:', error);\n        }\n    }\n    if (silenceTimer) {\n        clearTimeout(silenceTimer);\n        silenceTimer = null;\n    }\n}\n\n// Text-to-Speech setup\nfunction speak(text) {\n    // Check if speech synthesis is supported\n    if (!('speechSynthesis' in window)) {\n        console.error('Text-to-speech not supported');\n        return;\n    }\n\n    // Cancel any ongoing speech\n    window.speechSynthesis.cancel();\n\n    const utterance = new SpeechSynthesisUtterance(text);\n    \n    // Get the system's default voice\n    const voices = window.speechSynthesis.getVoices();\n    if (voices.length > 0) {\n        // Try to find a system voice\n        const systemVoice = voices.find(voice => \n            voice.name.includes('System') || \n            voice.name.includes('Default') ||\n            voice.name.includes('Siri')\n        );\n        if (systemVoice) {\n            utterance.voice = systemVoice;\n        }\n    }\n\n    // Set up event handlers for the utterance\n    utterance.onstart = () => {\n        isSpeaking = true;\n        if (isListening) {\n            stopListening();\n        }\n    };\n\n    utterance.onend = () => {\n        isSpeaking = false;\n        if (conversationMode) {\n            startListening();\n        }\n    };\n\n    window.speechSynthesis.speak(utterance);\n}\n\n// Initialize voices when they're loaded\nif ('speechSynthesis' in window) {\n    window.speechSynthesis.onvoiceschanged = () => {\n        window.speechSynthesis.getVoices();\n    };\n}\n\n// Initialize permission state and conversation mode\nwindow.addEventListener('load', () => {\n    // Initialize speech recognition early\n    initializeSpeechRecognition();\n\n    const iframe = getPermissionsIframe();\n    if (iframe) {\n        requestPermissionThroughIframe();\n    }\n\n    // Load conversation mode state\n    const savedMode = localStorage.getItem('conversationMode');\n    if (savedMode) {\n        conversationMode = savedMode === 'true';\n        document.getElementById('conversationMode').checked = conversationMode;\n    }\n\n    // Add conversation mode toggle listener\n    document.getElementById('conversationMode').addEventListener('change', (e) => {\n        conversationMode = e.target.checked;\n        localStorage.setItem('conversationMode', conversationMode);\n        \n        if (!conversationMode && isListening) {\n            stopListening();\n        }\n    });\n});\n\nexport { toggleSpeechRecognition, speak };\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","recognition","isListening","permissionGranted","silenceTimer","isSpeaking","conversationMode","getPermissionsIframe","document","querySelector","window","parent","requestPermissionThroughIframe","iframe","contentWindow","postMessage","console","error","getElementById","addEventListener","event","log","data","micButton","classList","contains","initializeSpeechRecognition","startListening","stopListening","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","onresult","transcript","Array","from","results","map","result","join","clearTimeout","setTimeout","inputText","trim","click","onerror","select","onend","start","toggleSpeechRecognition","_toggleSpeechRecognition","_callee","_callee$","_context","add","remove","speak","text","speechSynthesis","cancel","utterance","SpeechSynthesisUtterance","voices","getVoices","systemVoice","find","voice","includes","onstart","onvoiceschanged","savedMode","localStorage","getItem","checked","target","setItem"],"sourceRoot":""}