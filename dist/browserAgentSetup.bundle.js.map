{"version":3,"file":"browserAgentSetup.bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAJA,IAMMA,YAAY;EACd,SAAAA,aAAA,EAAc;IAAAC,eAAA,OAAAD,YAAA;IACV,IAAI,CAACE,YAAY,0RAEuE;IAExF,IAAI,CAACC,WAAW,GAAG,IAAI,CAAC,CAAC;IACzB,IAAI,CAACC,kBAAkB,GAAG,CAAC;IAC3B,IAAI,CAACC,QAAQ,GAAG;MACZC,WAAW,EAAE,uBAAuB;MACpCC,kBAAkB,EAAE,qCAAqC;MACzDC,eAAe,EAAE;IACrB,CAAC;EACL;EAAC,OAAAC,YAAA,CAAAT,YAAA;IAAAU,GAAA;IAAAC,KAAA,EAED,SAAAC,cAAcA,CAACP,QAAQ,EAAE;MACrB,IAAIA,QAAQ,CAACQ,aAAa,EAAE;QACxB,IAAI,CAACV,WAAW,GAAGW,QAAQ,CAACT,QAAQ,CAACQ,aAAa,CAAC;MACvD;MACA,IAAIR,QAAQ,CAACC,WAAW,EAAE;QACtB,IAAI,CAACD,QAAQ,CAACC,WAAW,GAAGD,QAAQ,CAACC,WAAW;MACpD;MACA,IAAID,QAAQ,CAACE,kBAAkB,EAAE;QAC7B,IAAI,CAACF,QAAQ,CAACE,kBAAkB,GAAGF,QAAQ,CAACE,kBAAkB;MAClE;MACA,IAAIF,QAAQ,CAACG,eAAe,EAAE;QAC1B,IAAI,CAACH,QAAQ,CAACG,eAAe,GAAGH,QAAQ,CAACG,eAAe;MAC5D;IAEJ;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAI,gBAAgBA,CAACC,IAAI,EAAE;MACnB,IAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAM;MAC5B,IAAI,IAAI,CAACd,kBAAkB,GAAGa,QAAQ,GAAG,IAAI,CAACd,WAAW,EAAE;QACvD,OAAO;UACHgB,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;QACb,CAAC;MACL;MACA,OAAO;QACHD,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MACb,CAAC;IACL;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAU,iBAAiBA,CAACL,IAAI,EAAE;MACpB,IAAI,CAACZ,kBAAkB,IAAIY,IAAI,CAACE,MAAM;IAC1C;EAAC;IAAAR,GAAA;IAAAC,KAAA,EAED,SAAAW,YAAYA,CAAA,EAAG;MACX,IAAI,CAAClB,kBAAkB,GAAG,CAAC;IAC/B;EAAC;IAAAM,GAAA;IAAAC,KAAA,EAED,SAAAY,WAAWA,CAAA,EAAG;MACV,OAAO,IAAI,CAAClB,QAAQ;IACxB;EAAC;AAAA;AAGE,IAAMmB,YAAY,GAAG,IAAIxB,YAAY,CAAC,CAAC,C","sources":["webpack://chrome-extensions-gbt/webpack/bootstrap","webpack://chrome-extensions-gbt/webpack/runtime/define property getters","webpack://chrome-extensions-gbt/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extensions-gbt/webpack/runtime/make namespace object","webpack://chrome-extensions-gbt/./scripts/browserAgentSetup.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * ./scripts/browserAgentSetup.js\n * \n * This module configures the browser agent with settings and context management.\n */\n\nclass BrowserAgent {\n    constructor() {\n        this.systemPrompt = `I am a browser assistant that helps users navigate and interact with web content.\nI can search for information, analyze page content, and help users find what they're looking for.\nI maintain context of our conversation and can perform various browser actions to assist users.`;\n        \n        this.contextSize = 4000; // Default context window size\n        this.currentContextSize = 0;\n        this.settings = {\n            apiEndpoint: 'http://localhost:1234',\n            embeddingsEndpoint: 'http://localhost:1234/v1/embeddings',\n            embeddingsModel: 'text-embedding-all-minilm-l6-v2-embedding',\n        };\n    }\n\n    updateSettings(settings) {\n        if (settings.contextWindow) {\n            this.contextSize = parseInt(settings.contextWindow);\n        }\n        if (settings.apiEndpoint) {\n            this.settings.apiEndpoint = settings.apiEndpoint;\n        }\n        if (settings.embeddingsEndpoint) {\n            this.settings.embeddingsEndpoint = settings.embeddingsEndpoint;\n        }\n        if (settings.embeddingsModel) {\n            this.settings.embeddingsModel = settings.embeddingsModel;\n        }\n\n    }\n\n    checkContextSize(text) {\n        const textSize = text.length;\n        if (this.currentContextSize + textSize > this.contextSize) {\n            return {\n                canAdd: false,\n                message: \"Context window limit reached. Starting new conversation.\"\n            };\n        }\n        return {\n            canAdd: true,\n            message: null\n        };\n    }\n\n    updateContextSize(text) {\n        this.currentContextSize += text.length;\n    }\n\n    resetContext() {\n        this.currentContextSize = 0;\n    }\n\n    getSettings() {\n        return this.settings;\n    }\n}\n\nexport const browserAgent = new BrowserAgent();\n"],"names":["BrowserAgent","_classCallCheck","systemPrompt","contextSize","currentContextSize","settings","apiEndpoint","embeddingsEndpoint","embeddingsModel","_createClass","key","value","updateSettings","contextWindow","parseInt","checkContextSize","text","textSize","length","canAdd","message","updateContextSize","resetContext","getSettings","browserAgent"],"sourceRoot":""}