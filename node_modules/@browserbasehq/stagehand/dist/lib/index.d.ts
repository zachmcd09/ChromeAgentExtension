import { type BrowserContext, type Page } from "@playwright/test";
import { z } from "zod";
import { LogLine } from "../types/log";
import { ActOptions, ActResult, ConstructorParams, ExtractOptions, ExtractResult, InitFromPageOptions, InitFromPageResult, InitOptions, InitResult, ObserveOptions, ObserveResult } from "../types/stagehand";
export declare class Stagehand {
    private llmProvider;
    private llmClient;
    page: Page;
    context: BrowserContext;
    private env;
    private apiKey;
    private projectId;
    private verbose;
    private debugDom;
    private headless;
    private logger;
    private externalLogger?;
    private domSettleTimeoutMs;
    private browserBaseSessionCreateParams?;
    private enableCaching;
    private variables;
    private browserbaseResumeSessionID?;
    private contextPath?;
    private actHandler?;
    private extractHandler?;
    private observeHandler?;
    constructor({ env, apiKey, projectId, verbose, debugDom, llmProvider, headless, logger, browserBaseSessionCreateParams, domSettleTimeoutMs, enableCaching, browserbaseResumeSessionID, modelName, modelClientOptions, }?: ConstructorParams);
    init({ modelName, modelClientOptions, domSettleTimeoutMs, }?: InitOptions): Promise<InitResult>;
    initFromPage({ page, modelName, modelClientOptions, }: InitFromPageOptions): Promise<InitFromPageResult>;
    private pending_logs_to_send_to_browserbase;
    private is_processing_browserbase_logs;
    log(logObj: LogLine): void;
    private _run_browserbase_log_processing_cycle;
    private _log_to_browserbase;
    private _waitForSettledDom;
    private startDomDebug;
    private cleanupDomDebug;
    act({ action, modelName, modelClientOptions, useVision, variables, domSettleTimeoutMs, }: ActOptions): Promise<ActResult>;
    extract<T extends z.AnyZodObject>({ instruction, schema, modelName, modelClientOptions, domSettleTimeoutMs, }: ExtractOptions<T>): Promise<ExtractResult<T>>;
    observe(options?: ObserveOptions): Promise<ObserveResult[]>;
    close(): Promise<void>;
}
export * from "../types/browser";
export * from "../types/log";
export * from "../types/model";
export * from "../types/playwright";
export * from "../types/stagehand";
